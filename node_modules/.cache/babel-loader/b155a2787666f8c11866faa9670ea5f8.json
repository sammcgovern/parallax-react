{"ast":null,"code":"var _jsxFileName = \"/Users/sam/Desktop/parallax-test/my-app/src/components/trainingCourses/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { FlexColumn, H1 } from \"../../defaultStyles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TrainingCourses = () => {\n  _s();\n\n  const perPage = 3;\n  const [totalPages, setTotalPages] = useState(1);\n  const [page, setPage] = useState(1);\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const url = 'https://frontend-trial-api.qa.parallax.dev/api/courses';\n  \"http://frontend-trial-api.qa.parallax.dev/api/courses?page=2\"; // const {\n  //   data,\n  //   loading,\n  // } = useFetchData(url);\n\n  useEffect(() => {\n    const getdata = () => {\n      setLoading(true);\n      fetch(`http://frontend-trial-api.qa.parallax.dev/api/courses?${page}`).then(res => res.json()).then(res => {\n        setTotalPages(res.courses.total);\n        setData([...data, ...res.courses.data]);\n        setLoading(false);\n      });\n    };\n\n    getdata();\n  }, [page]); // console.log(loading)\n\n  console.log(data);\n  return loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 8\n  }, this) : /*#__PURE__*/_jsxDEV(FlexColumn, {\n    children: [/*#__PURE__*/_jsxDEV(H1, {\n      children: \"Training Courses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }, this), data.courses]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TrainingCourses, \"t8wu+fsh/4buufsrlVARbmQkAFk=\");\n\n_c = TrainingCourses;\n\nvar _c;\n\n$RefreshReg$(_c, \"TrainingCourses\");","map":{"version":3,"sources":["/Users/sam/Desktop/parallax-test/my-app/src/components/trainingCourses/index.tsx"],"names":["React","useEffect","useState","FlexColumn","H1","TrainingCourses","perPage","totalPages","setTotalPages","page","setPage","data","setData","loading","setLoading","url","getdata","fetch","then","res","json","courses","total","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,UAAT,EAAqBC,EAArB,QAA+B,qBAA/B;;AAsBA,OAAO,MAAMC,eAAyB,GAAG,MAAM;AAAA;;AAC7C,QAAMC,OAAO,GAAG,CAAhB;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,CAAD,CAAhC;AAEA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAW,EAAX,CAAhC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMa,GAAG,GAAG,wDAAZ;AACA,iEAT6C,CAW7C;AACA;AACA;AACA;;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,OAAO,GAAG,MAAM;AACpBF,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAG,MAAAA,KAAK,CAAE,yDAAwDR,IAAK,EAA/D,CAAL,CACGS,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQC,GAAG,IAAI;AACXX,QAAAA,aAAa,CAACW,GAAG,CAACE,OAAJ,CAAYC,KAAb,CAAb;AACAV,QAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAU,GAAGQ,GAAG,CAACE,OAAJ,CAAYV,IAAzB,CAAD,CAAP;AACAG,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OANH;AAOD,KATD;;AAUAE,IAAAA,OAAO;AACR,GAZQ,EAYN,CAACP,IAAD,CAZM,CAAT,CAhB6C,CA8B7C;;AACAc,EAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ;AAEA,SACEE,OAAO,gBACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADI,gBAIH,QAAC,UAAD;AAAA,4BACE,QAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAECF,IAAI,CAACU,OAFN;AAAA;AAAA;AAAA;AAAA;AAAA,UALN;AAYD,CA7CM;;GAAMhB,e;;KAAAA,e","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport { FlexColumn, H1 } from \"../../defaultStyles\";\n\n type Server = {\n  courses: Course;\nerrors: any[];\nsuccess: boolean;\n}\nexport type Course = {\n  category: string;\n  course_id: string;\n  created_at: Date | null\n  ends_at: Date | null\n  id: number;\n  link: \"/courses/intro-to-parallax\"\n  location: string;\n  name: string;\n  price: number;\n  slug: string;\n  starts_at: Date | null;\n  updated_at: Date | null\n}\n\nexport const TrainingCourses: React.FC = () => {\n  const perPage = 3;\n  const [totalPages, setTotalPages] = useState(1);\n  const [page, setPage] = useState(1);\n \n  const [data, setData] = useState<Server[]>([]);\n  const [loading, setLoading] = useState(false);\n  \n  const url = 'https://frontend-trial-api.qa.parallax.dev/api/courses'\n  \"http://frontend-trial-api.qa.parallax.dev/api/courses?page=2\"\n\n  // const {\n  //   data,\n  //   loading,\n  // } = useFetchData(url);\n\n  useEffect(() => {\n    const getdata = () => {\n      setLoading(true);\n      fetch(`http://frontend-trial-api.qa.parallax.dev/api/courses?${page}`)\n        .then(res => res.json())\n        .then(res => {\n          setTotalPages(res.courses.total);\n          setData([...data, ...res.courses.data]);\n          setLoading(false);\n        });\n    }\n    getdata();\n  }, [page]);\n\n  // console.log(loading)\n  console.log(data);\n\n  return (\n    loading ?\n      (<div>loading...</div>)\n      :\n      (\n        <FlexColumn>\n          <H1>Training Courses</H1>\n        {data.courses}\n        </FlexColumn>\n      )\n\n  )\n}"]},"metadata":{},"sourceType":"module"}