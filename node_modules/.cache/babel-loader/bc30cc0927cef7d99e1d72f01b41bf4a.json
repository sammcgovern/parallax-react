{"ast":null,"code":"export const filterCourses = _ref => {\n  let {\n    categories,\n    locations,\n    setLoading,\n    selectedCategories,\n    selectedLocations,\n    setCoursesList,\n    setApiData\n  } = _ref;\n  const payload = {\n    \"categories\": selectedCategories.map(x => x.value).length > 0 ? selectedCategories.map(x => x.value) : categories.map(x => x.slug),\n    \"locations\": selectedLocations.map(x => x.value).length > 0 ? selectedLocations.map(x => x.value) : locations.map(x => x.slug)\n  };\n  setLoading(true);\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(payload)\n  };\n  fetch('https://frontend-trial-api.qa.parallax.dev/api/courses', requestOptions).then(response => response.json()).then(res => {\n    console.log(res);\n    setCoursesList(res.courses.data);\n    setApiData(res.courses);\n    setLoading(false);\n  });\n};","map":{"version":3,"sources":["/Users/sam/Desktop/parallax-test/src/dataCalls/filterCourses.tsx"],"names":["filterCourses","categories","locations","setLoading","selectedCategories","selectedLocations","setCoursesList","setApiData","payload","map","x","value","length","slug","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","res","console","log","courses","data"],"mappings":"AAaA,OAAO,MAAMA,aAAa,GAAG,QAAqH;AAAA,MAApH;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,SAAd;AAAyBC,IAAAA,UAAzB;AAAqCC,IAAAA,kBAArC;AAAyDC,IAAAA,iBAAzD;AAA4EC,IAAAA,cAA5E;AAA4FC,IAAAA;AAA5F,GAAoH;AAC9I,QAAMC,OAAO,GAAG;AACZ,kBAAcJ,kBAAkB,CAACK,GAAnB,CAAuBC,CAAC,IAAIA,CAAC,CAACC,KAA9B,EAAqCC,MAArC,GAA8C,CAA9C,GAAkDR,kBAAkB,CAACK,GAAnB,CAAuBC,CAAC,IAAIA,CAAC,CAACC,KAA9B,CAAlD,GAAyFV,UAAU,CAACQ,GAAX,CAAeC,CAAC,IAAIA,CAAC,CAACG,IAAtB,CAD3F;AAEZ,iBAAaR,iBAAiB,CAACI,GAAlB,CAAsBC,CAAC,IAAIA,CAAC,CAACC,KAA7B,EAAoCC,MAApC,GAA6C,CAA7C,GAAiDP,iBAAiB,CAACI,GAAlB,CAAsBC,CAAC,IAAIA,CAAC,CAACC,KAA7B,CAAjD,GAAuFT,SAAS,CAACO,GAAV,CAAcC,CAAC,IAAIA,CAAC,CAACG,IAArB;AAFxF,GAAhB;AAIAV,EAAAA,UAAU,CAAC,IAAD,CAAV;AACA,QAAMW,cAAc,GAAG;AACnBC,IAAAA,MAAM,EAAE,MADW;AAEnBC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFU;AAGnBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,OAAf;AAHa,GAAvB;AAKAY,EAAAA,KAAK,CAAC,wDAAD,EAA2DN,cAA3D,CAAL,CACKO,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,GAAG,IAAI;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAlB,IAAAA,cAAc,CAACkB,GAAG,CAACG,OAAJ,CAAYC,IAAb,CAAd;AACArB,IAAAA,UAAU,CAACiB,GAAG,CAACG,OAAL,CAAV;AACAxB,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAPL;AAQH,CAnBM","sourcesContent":["import { MultiValue } from \"react-select\";\nimport { Category, Course, Courses, Location } from \"../types\";\n\ntype Props = {\n    categories: Category[];\n    locations: Location[];\n    setLoading: (loading: boolean) => void;\n    selectedCategories: MultiValue<{ value: string; label: string; }>;\n    selectedLocations: MultiValue<{ value: string; label: string; }>;\n    setCoursesList: (courseList: Course[]) => void;\n    setApiData: (apiData: Courses) => void;\n};\n\nexport const filterCourses = ({ categories, locations, setLoading, selectedCategories, selectedLocations, setCoursesList, setApiData }: Props) => {\n    const payload = {\n        \"categories\": selectedCategories.map(x => x.value).length > 0 ? selectedCategories.map(x => x.value) : categories.map(x => x.slug),\n        \"locations\": selectedLocations.map(x => x.value).length > 0 ? selectedLocations.map(x => x.value) : locations.map(x => x.slug),\n    };\n    setLoading(true);\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(payload)\n    };\n    fetch('https://frontend-trial-api.qa.parallax.dev/api/courses', requestOptions)\n        .then(response => response.json())\n        .then(res => {\n            console.log(res);\n            setCoursesList(res.courses.data);\n            setApiData(res.courses)\n            setLoading(false);\n        });\n};\n"]},"metadata":{},"sourceType":"module"}