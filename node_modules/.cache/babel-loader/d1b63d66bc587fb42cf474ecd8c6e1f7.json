{"ast":null,"code":"var _jsxFileName = \"/Users/sam/Desktop/parallax-test/my-app/src/components/trainingCourses/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TrainingCourses = () => {\n  _s();\n\n  const perPage = 3;\n  const [totalPages, setTotalPages] = useState(1);\n  const [page, setPage] = useState(1);\n  const [coursesList, setcoursesList] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [apiData, setApiData] = useState();\n  const [categories, setCategories] = useState([]);\n  console.log(coursesList);\n  let url = `http://frontend-trial-api.qa.parallax.dev/api/courses`;\n\n  if (page > 1) {\n    url = (apiData === null || apiData === void 0 ? void 0 : apiData.next_page_url) || url;\n  }\n\n  const categoriesUrl = 'https://frontend-trial-api.qa.parallax.dev/api/categories';\n  useEffect(() => {\n    const getCategories = () => {\n      setLoading(true);\n      fetch(categoriesUrl).then(res => res.json()).then(res => {\n        console.log(res);\n        setCategories(res.courses.data);\n        setLoading(false);\n      });\n    };\n\n    getCategories();\n\n    const getcoursesList = () => {\n      setLoading(true);\n      fetch(url).then(res => res.json()).then(res => {\n        setTotalPages(res.last_page);\n        setcoursesList([...coursesList, ...res.courses.data]);\n        setApiData(res.courses);\n        setLoading(false);\n      });\n    };\n\n    getcoursesList();\n  }, [page]);\n  const columns = React.useMemo(() => [{\n    Header: ' Course',\n    accessor: 'course'\n  }, {\n    Header: 'ID',\n    accessor: 'id'\n  }, {\n    Header: 'Price',\n    accessor: 'price'\n  }, {\n    Header: 'Location',\n    accessor: 'location'\n  }], []);\n  const data = React.useMemo(() => coursesList, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [coursesList.map((x, i) => {\n      var _x$name;\n\n      // Tidy up\n      let name = x === null || x === void 0 ? void 0 : (_x$name = x.name) === null || _x$name === void 0 ? void 0 : _x$name.replace('<p>', '').replace('</p>', '');\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        children: `${name} ${x.category} ${x.location}`\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 16\n      }, this);\n    }), (apiData === null || apiData === void 0 ? void 0 : apiData.current_page) !== (apiData === null || apiData === void 0 ? void 0 : apiData.last_page) && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn-load-more\",\n      onClick: () => setPage(page + 1),\n      children: loading ? 'Loading...' : 'Load More '\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 56\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TrainingCourses, \"DW5ITT5KoR0n34/D6AAsANGbyXE=\");\n\n_c = TrainingCourses;\n\nvar _c;\n\n$RefreshReg$(_c, \"TrainingCourses\");","map":{"version":3,"sources":["/Users/sam/Desktop/parallax-test/my-app/src/components/trainingCourses/index.tsx"],"names":["React","useEffect","useState","TrainingCourses","perPage","totalPages","setTotalPages","page","setPage","coursesList","setcoursesList","loading","setLoading","apiData","setApiData","categories","setCategories","console","log","url","next_page_url","categoriesUrl","getCategories","fetch","then","res","json","courses","data","getcoursesList","last_page","columns","useMemo","Header","accessor","map","x","i","name","replace","category","location","current_page"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Select from 'react-select';\n\nimport { Category, Course, Courses, SelectOption } from '../../types';\nimport { Table } from './table';\n\nexport const TrainingCourses: React.FC = () => {\n  const perPage = 3;\n  const [totalPages, setTotalPages] = useState(1);\n  const [page, setPage] = useState(1);\n  const [coursesList, setcoursesList] = useState<Course[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [apiData, setApiData] = useState<Courses>();\n  const [categories, setCategories] = useState<Category[]>([]);\nconsole.log(coursesList)\n  let url = `http://frontend-trial-api.qa.parallax.dev/api/courses`;\n  if (page > 1) {\n    url = apiData?.next_page_url || url\n  }\n  const categoriesUrl = 'https://frontend-trial-api.qa.parallax.dev/api/categories';\n\n  useEffect(() => {\n    const getCategories = () => {\n      setLoading(true);\n      fetch(categoriesUrl)\n        .then(res => res.json())\n        .then(res => {\n          console.log(res)\n          setCategories(res.courses.data)\n          setLoading(false);\n        });\n    }\n    getCategories();\n\n    const getcoursesList = () => {\n      setLoading(true);\n      fetch(url)\n        .then(res => res.json())\n        .then(res => {\n          setTotalPages(res.last_page);\n          setcoursesList([...coursesList, ...res.courses.data]);\n          setApiData(res.courses)\n          setLoading(false);\n        });\n    }\n    getcoursesList();\n  }, [page]);\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: ' Course',\n        accessor: 'course',\n      },\n      {\n        Header: 'ID',\n        accessor: 'id',\n      },\n\n      {\n        Header: 'Price',\n        accessor: 'price',\n      },\n      {\n        Header: 'Location',\n        accessor: 'location',\n      }\n    ],\n\n    []\n  )\n\n  const data = React.useMemo(() => coursesList, [])\n\n  return (\n    <div className=\"App\">\n      {/* <Table columns={columns} data={data} /> */}\n      {coursesList.map((x: Course, i) => {\n        // Tidy up\n        let name = x?.name?.replace('<p>', '').replace('</p>', '');\n        return <div key={i} className=\"box\">\n          {`${name} ${x.category} ${x.location}`}\n        </div>\n      })}\n      {apiData?.current_page !== apiData?.last_page && <button className=\"btn-load-more\" onClick={() => setPage(page + 1)}>{loading ? 'Loading...' : 'Load More '}</button>}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}