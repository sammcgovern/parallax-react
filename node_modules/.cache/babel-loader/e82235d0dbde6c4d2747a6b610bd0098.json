{"ast":null,"code":"var _jsxFileName = \"/Users/sam/Desktop/parallax-test/my-app/src/components/trainingCourses/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TrainingCourses = () => {\n  _s();\n\n  const perPage = 3;\n  const [totalPages, setTotalPages] = useState(1);\n  const [page, setPage] = useState(1);\n  const [userList, setUserList] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const getUserList = () => {\n      setLoading(true);\n      fetch(`https://reqres.in/api/users?per_page=${perPage}&page=${page}`).then(res => res.json()).then(res => {\n        setTotalPages(res.total_pages);\n        setUserList([...userList, ...res.data]);\n        setLoading(false);\n      });\n    };\n\n    getUserList();\n  }, [page]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Load more pagination in React - \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://www.cluemediator.com\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Clue Mediator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 43\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), userList.map((x, i) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: x.avatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name\",\n          children: [x.first_name, \" \", x.last_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"email\",\n          children: x.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 16\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"clearfix\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), totalPages !== page && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn-load-more\",\n      onClick: () => setPage(page + 1),\n      children: loading ? 'Loading...' : 'Load More'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TrainingCourses, \"l2lkYOVC5exjUlk1yYg6pBns2w8=\");\n\n_c = TrainingCourses;\n\nvar _c;\n\n$RefreshReg$(_c, \"TrainingCourses\");","map":{"version":3,"sources":["/Users/sam/Desktop/parallax-test/my-app/src/components/trainingCourses/index.tsx"],"names":["React","useEffect","useState","TrainingCourses","perPage","totalPages","setTotalPages","page","setPage","userList","setUserList","loading","setLoading","getUserList","fetch","then","res","json","total_pages","data","map","x","i","avatar","first_name","last_name","email"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAwBA,OAAO,MAAMC,eAAyB,GAAG,MAAM;AAAA;;AAC7C,QAAMC,OAAO,GAAG,CAAhB;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,CAAD,CAAhC;AAEA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAM,EAAN,CAAxC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,WAAW,GAAG,MAAM;AACxBD,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,MAAAA,KAAK,CAAE,wCAAuCV,OAAQ,SAAQG,IAAK,EAA9D,CAAL,CACGQ,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQC,GAAG,IAAI;AACXV,QAAAA,aAAa,CAACU,GAAG,CAACE,WAAL,CAAb;AACAR,QAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAc,GAAGO,GAAG,CAACG,IAArB,CAAD,CAAX;AACAP,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OANH;AAOD,KATD;;AAUAC,IAAAA,WAAW;AACZ,GAZQ,EAYN,CAACN,IAAD,CAZM,CAAT;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA,kEAAoC;AAAG,QAAA,IAAI,EAAC,8BAAR;AAAuC,QAAA,MAAM,EAAC,QAA9C;AAAuD,QAAA,GAAG,EAAC,qBAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAApC;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGE,QAAQ,CAACW,GAAT,CAAa,CAACC,CAAD,EAA8UC,CAA9U,KAAkX;AAC9X,0BAAO;AAAa,QAAA,SAAS,EAAC,KAAvB;AAAA,gCACL;AAAK,UAAA,GAAG,EAAED,CAAC,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,gBADK,eAEL;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,qBAAuBF,CAAC,CAACG,UAAzB,OAAsCH,CAAC,CAACI,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFK,eAGL;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,oBAAwBJ,CAAC,CAACK;AAA1B;AAAA;AAAA;AAAA;AAAA,gBAHK;AAAA,SAAUJ,CAAV;AAAA;AAAA;AAAA;AAAA,cAAP;AAKD,KANA,CAFH,eASE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YATF,EAUGjB,UAAU,KAAKE,IAAf,iBAAuB;AAAQ,MAAA,SAAS,EAAC,eAAlB;AAAkC,MAAA,OAAO,EAAE,MAAMC,OAAO,CAACD,IAAI,GAAG,CAAR,CAAxD;AAAA,gBAAqEI,OAAO,GAAG,YAAH,GAAkB;AAA9F;AAAA;AAAA;AAAA;AAAA,YAV1B;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CApCM;;GAAMR,e;;KAAAA,e","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport { FlexColumn, H1 } from \"../../defaultStyles\";\n\n type Server = {\n  courses: Course;\nerrors: any[];\nsuccess: boolean;\n}\nexport type Course = {\n  category: string;\n  course_id: string;\n  created_at: Date | null\n  ends_at: Date | null\n  id: number;\n  link: \"/courses/intro-to-parallax\"\n  location: string;\n  name: string;\n  price: number;\n  slug: string;\n  starts_at: Date | null;\n  updated_at: Date | null\n}\n\nexport const TrainingCourses: React.FC = () => {\n  const perPage = 3;\n  const [totalPages, setTotalPages] = useState(1);\n  const [page, setPage] = useState(1);\n \n  const [userList, setUserList] = useState<any>([]);\n  const [loading, setLoading] = useState(false);\n \n  useEffect(() => {\n    const getUserList = () => {\n      setLoading(true);\n      fetch(`https://reqres.in/api/users?per_page=${perPage}&page=${page}`)\n        .then(res => res.json())\n        .then(res => {\n          setTotalPages(res.total_pages);\n          setUserList([...userList, ...res.data]);\n          setLoading(false);\n        });\n    }\n    getUserList();\n  }, [page]);\n \n  return (\n    <div className=\"App\">\n      <h3>Load more pagination in React - <a href=\"https://www.cluemediator.com\" target=\"_blank\" rel=\"noopener noreferrer\">Clue Mediator</a></h3>\n      {userList.map((x: { avatar: string | undefined; first_name: boolean | React.ReactChild | React.ReactFragment | React.ReactPortal | null | undefined; last_name: boolean | React.ReactChild | React.ReactFragment | React.ReactPortal | null | undefined; email: boolean | React.ReactChild | React.ReactFragment | React.ReactPortal | null | undefined; }, i: React.Key | null | undefined) => {\n        return <div key={i} className=\"box\">\n          <img src={x.avatar} />\n          <div className=\"name\">{x.first_name} {x.last_name}</div>\n          <div className=\"email\">{x.email}</div>\n        </div>\n      })}\n      <div className=\"clearfix\"></div>\n      {totalPages !== page && <button className=\"btn-load-more\" onClick={() => setPage(page + 1)}>{loading ? 'Loading...' : 'Load More'}</button>}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}