{"ast":null,"code":"var _jsxFileName = \"/Users/sam/Desktop/parallax-test/my-app/src/components/trainingCourses/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TrainingCourses = () => {\n  _s();\n\n  const perPage = 3;\n  const [totalPages, setTotalPages] = useState(1);\n  const [page, setPage] = useState(1);\n  const [coursesList, setcoursesList] = useState([]);\n  const [loading, setLoading] = useState(false);\n  let url = `https://frontend-trial-api.qa.parallax.dev/api/courses`;\n\n  if (page > 1) {\n    url = url + `&page=${page}`;\n  }\n\n  useEffect(() => {\n    const getcoursesList = () => {\n      setLoading(true);\n      fetch(url).then(res => res.json()).then(res => {\n        setTotalPages(res.total_pages);\n        setcoursesList([...coursesList, ...res.data]);\n        setLoading(false);\n      });\n    };\n\n    getcoursesList();\n  }, [page]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [coursesList.map((x, i) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        children: x.name\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 16\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"clearfix\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), totalPages !== page && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn-load-more\",\n      onClick: () => setPage(page + 1),\n      children: loading ? 'Loading...' : 'Load More'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TrainingCourses, \"CG/VHvx1T4BzF02sR06Fw3MKVpk=\");\n\n_c = TrainingCourses;\n\nvar _c;\n\n$RefreshReg$(_c, \"TrainingCourses\");","map":{"version":3,"sources":["/Users/sam/Desktop/parallax-test/my-app/src/components/trainingCourses/index.tsx"],"names":["React","useEffect","useState","TrainingCourses","perPage","totalPages","setTotalPages","page","setPage","coursesList","setcoursesList","loading","setLoading","url","getcoursesList","fetch","then","res","json","total_pages","data","map","x","i","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAwBA,OAAO,MAAMC,eAAyB,GAAG,MAAM;AAAA;;AAC7C,QAAMC,OAAO,GAAG,CAAhB;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAM,EAAN,CAA9C;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AACD,MAAIW,GAAG,GAAI,wDAAX;;AACA,MAAGN,IAAI,GAAG,CAAV,EAAa;AACXM,IAAAA,GAAG,GAAGA,GAAG,GAAI,SAAQN,IAAK,EAA1B;AACD;;AACAN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,cAAc,GAAG,MAAM;AAC3BF,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAG,MAAAA,KAAK,CAACF,GAAD,CAAL,CACGG,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQC,GAAG,IAAI;AACXX,QAAAA,aAAa,CAACW,GAAG,CAACE,WAAL,CAAb;AACAT,QAAAA,cAAc,CAAC,CAAC,GAAGD,WAAJ,EAAiB,GAAGQ,GAAG,CAACG,IAAxB,CAAD,CAAd;AACAR,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OANH;AAOD,KATD;;AAUAE,IAAAA,cAAc;AACf,GAZQ,EAYN,CAACP,IAAD,CAZM,CAAT;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,eACGE,WAAW,CAACY,GAAZ,CAAgB,CAACC,CAAD,EAAuBC,CAAvB,KAA2D;AAC1E,0BAAO;AAAa,QAAA,SAAS,EAAC,KAAvB;AAAA,kBACJD,CAAC,CAACE;AADE,SAAUD,CAAV;AAAA;AAAA;AAAA;AAAA,cAAP;AAGD,KAJA,CADH,eAME;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YANF,EAOGlB,UAAU,KAAKE,IAAf,iBAAuB;AAAQ,MAAA,SAAS,EAAC,eAAlB;AAAkC,MAAA,OAAO,EAAE,MAAMC,OAAO,CAACD,IAAI,GAAG,CAAR,CAAxD;AAAA,gBAAqEI,OAAO,GAAG,YAAH,GAAkB;AAA9F;AAAA;AAAA;AAAA;AAAA,YAP1B;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAnCM;;GAAMR,e;;KAAAA,e","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport { FlexColumn, H1 } from \"../../defaultStyles\";\n\n type Server = {\n  courses: Course;\nerrors: any[];\nsuccess: boolean;\n}\nexport type Course = {\n  category: string;\n  course_id: string;\n  created_at: Date | null\n  ends_at: Date | null\n  id: number;\n  link: \"/courses/intro-to-parallax\"\n  location: string;\n  name: string;\n  price: number;\n  slug: string;\n  starts_at: Date | null;\n  updated_at: Date | null\n}\n\nexport const TrainingCourses: React.FC = () => {\n  const perPage = 3;\n  const [totalPages, setTotalPages] = useState(1);\n  const [page, setPage] = useState(1);\n  const [coursesList, setcoursesList] = useState<any>([]);\n  const [loading, setLoading] = useState(false);\n let url = `https://frontend-trial-api.qa.parallax.dev/api/courses`;\n if(page > 1) {\n   url = url + `&page=${page}`\n }\n  useEffect(() => {\n    const getcoursesList = () => {\n      setLoading(true);\n      fetch(url)\n        .then(res => res.json())\n        .then(res => {\n          setTotalPages(res.total_pages);\n          setcoursesList([...coursesList, ...res.data]);\n          setLoading(false);\n        });\n    }\n    getcoursesList();\n  }, [page]);\n \n  return (\n    <div className=\"App\">\n      {coursesList.map((x: { name: string; }, i: React.Key | null | undefined) => {\n        return <div key={i} className=\"box\">\n          {x.name}\n        </div>\n      })}\n      <div className=\"clearfix\"></div>\n      {totalPages !== page && <button className=\"btn-load-more\" onClick={() => setPage(page + 1)}>{loading ? 'Loading...' : 'Load More'}</button>}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}