{"ast":null,"code":"var _jsxFileName = \"/Users/sam/Desktop/parallax-test/my-app/src/components/trainingCourses/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TrainingCourses = () => {\n  _s();\n\n  const perPage = 3;\n  const [totalPages, setTotalPages] = useState(1);\n  const [page, setPage] = useState(1);\n  const [coursesList, setcoursesList] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [apiData, setApiData] = useState();\n  const [categories, setCategories] = useState([]);\n  const [selectedCategories, setSelectedCategories] = useState([]);\n  console.log(coursesList);\n  let url = `http://frontend-trial-api.qa.parallax.dev/api/courses`;\n\n  if (page > 1) {\n    url = (apiData === null || apiData === void 0 ? void 0 : apiData.next_page_url) || url;\n  }\n\n  const categoriesUrl = 'https://frontend-trial-api.qa.parallax.dev/api/categories';\n  console.log(selectedCategories);\n  useEffect(() => {\n    const getCategories = () => {\n      setLoading(true);\n      fetch(categoriesUrl).then(res => res.json()).then(res => {\n        console.log(res);\n        setCategories(res.courses.data);\n        setLoading(false);\n      });\n    };\n\n    getCategories();\n\n    const getcoursesList = () => {\n      setLoading(true);\n      fetch(url).then(res => res.json()).then(res => {\n        setTotalPages(res.last_page);\n        setcoursesList([...coursesList, ...res.courses.data]);\n        setApiData(res.courses);\n        setLoading(false);\n      });\n    };\n\n    getcoursesList();\n  }, [page]);\n  console.log(categories.map(x => x.name));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      isMulti: true,\n      onChange: value => setSelectedCategories([value]),\n      options: [{\n        value: 'chocolate',\n        label: 'Chocolate'\n      }, {\n        value: 'strawberry',\n        label: 'Strawberry'\n      }, {\n        value: 'vanilla',\n        label: 'Vanilla'\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), coursesList.map((x, i) => {\n      var _x$name;\n\n      // Tidy up\n      let name = x === null || x === void 0 ? void 0 : (_x$name = x.name) === null || _x$name === void 0 ? void 0 : _x$name.replace('<p>', '').replace('</p>', '');\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        children: `${name} ${x.category} ${x.location}`\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 16\n      }, this);\n    }), (apiData === null || apiData === void 0 ? void 0 : apiData.current_page) !== (apiData === null || apiData === void 0 ? void 0 : apiData.last_page) && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn-load-more\",\n      onClick: () => setPage(page + 1),\n      children: loading ? 'Loading...' : 'Load More '\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 56\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TrainingCourses, \"4q5RpL7+DhUq5sa9Bg3m6Rdtq6g=\");\n\n_c = TrainingCourses;\n\nvar _c;\n\n$RefreshReg$(_c, \"TrainingCourses\");","map":{"version":3,"sources":["/Users/sam/Desktop/parallax-test/my-app/src/components/trainingCourses/index.tsx"],"names":["React","useEffect","useState","Select","TrainingCourses","perPage","totalPages","setTotalPages","page","setPage","coursesList","setcoursesList","loading","setLoading","apiData","setApiData","categories","setCategories","selectedCategories","setSelectedCategories","console","log","url","next_page_url","categoriesUrl","getCategories","fetch","then","res","json","courses","data","getcoursesList","last_page","map","x","name","value","label","i","replace","category","location","current_page"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAIA,OAAO,MAAMC,eAAyB,GAAG,MAAM;AAAA;;AAC7C,QAAMC,OAAO,GAAG,CAAhB;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAW,EAAX,CAA9C;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,EAAtC;AACA,QAAM,CAACc,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAa,EAAb,CAA5C;AACA,QAAM,CAACgB,kBAAD,EAAqBC,qBAArB,IAA8CjB,QAAQ,CAAQ,EAAR,CAA5D;AACAkB,EAAAA,OAAO,CAACC,GAAR,CAAYX,WAAZ;AACA,MAAIY,GAAG,GAAI,uDAAX;;AACA,MAAId,IAAI,GAAG,CAAX,EAAc;AACZc,IAAAA,GAAG,GAAG,CAAAR,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAES,aAAT,KAA0BD,GAAhC;AACD;;AACD,QAAME,aAAa,GAAG,2DAAtB;AACFJ,EAAAA,OAAO,CAACC,GAAR,CAAYH,kBAAZ;AACEjB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMwB,aAAa,GAAG,MAAM;AAC1BZ,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAa,MAAAA,KAAK,CAACF,aAAD,CAAL,CACGG,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQC,GAAG,IAAI;AACXR,QAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACAX,QAAAA,aAAa,CAACW,GAAG,CAACE,OAAJ,CAAYC,IAAb,CAAb;AACAlB,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OANH;AAOD,KATD;;AAUAY,IAAAA,aAAa;;AAEb,UAAMO,cAAc,GAAG,MAAM;AAC3BnB,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAa,MAAAA,KAAK,CAACJ,GAAD,CAAL,CACGK,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQC,GAAG,IAAI;AACXrB,QAAAA,aAAa,CAACqB,GAAG,CAACK,SAAL,CAAb;AACAtB,QAAAA,cAAc,CAAC,CAAC,GAAGD,WAAJ,EAAiB,GAAGkB,GAAG,CAACE,OAAJ,CAAYC,IAAhC,CAAD,CAAd;AACAhB,QAAAA,UAAU,CAACa,GAAG,CAACE,OAAL,CAAV;AACAjB,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAPH;AAQD,KAVD;;AAWAmB,IAAAA,cAAc;AACf,GAzBQ,EAyBN,CAACxB,IAAD,CAzBM,CAAT;AA0BFY,EAAAA,OAAO,CAACC,GAAR,CAAYL,UAAU,CAACkB,GAAX,CAAeC,CAAC,IAAIA,CAAC,CAACC,IAAtB,CAAZ;AACE,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,OAAO,EAAE,IADX;AAEA,MAAA,QAAQ,EAAGC,KAAD,IAAWlB,qBAAqB,CAAC,CAACkB,KAAD,CAAD,CAF1C;AAGE,MAAA,OAAO,EAAG,CACR;AAAEA,QAAAA,KAAK,EAAE,WAAT;AAAsBC,QAAAA,KAAK,EAAE;AAA7B,OADQ,EAER;AAAED,QAAAA,KAAK,EAAE,YAAT;AAAuBC,QAAAA,KAAK,EAAE;AAA9B,OAFQ,EAGR;AAAED,QAAAA,KAAK,EAAE,SAAT;AAAoBC,QAAAA,KAAK,EAAE;AAA3B,OAHQ;AAHZ;AAAA;AAAA;AAAA;AAAA,YADF,EAYG5B,WAAW,CAACwB,GAAZ,CAAgB,CAACC,CAAD,EAAYI,CAAZ,KAAkB;AAAA;;AACjC;AACA,UAAIH,IAAI,GAAGD,CAAH,aAAGA,CAAH,kCAAGA,CAAC,CAAEC,IAAN,4CAAG,QAASI,OAAT,CAAiB,KAAjB,EAAwB,EAAxB,EAA4BA,OAA5B,CAAoC,MAApC,EAA4C,EAA5C,CAAX;AACA,0BAAO;AAAa,QAAA,SAAS,EAAC,KAAvB;AAAA,kBACH,GAAEJ,IAAK,IAAGD,CAAC,CAACM,QAAS,IAAGN,CAAC,CAACO,QAAS;AADhC,SAAUH,CAAV;AAAA;AAAA;AAAA;AAAA,cAAP;AAGD,KANA,CAZH,EAmBG,CAAAzB,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAE6B,YAAT,OAA0B7B,OAA1B,aAA0BA,OAA1B,uBAA0BA,OAAO,CAAEmB,SAAnC,kBAAgD;AAAQ,MAAA,SAAS,EAAC,eAAlB;AAAkC,MAAA,OAAO,EAAE,MAAMxB,OAAO,CAACD,IAAI,GAAG,CAAR,CAAxD;AAAA,gBAAqEI,OAAO,GAAG,YAAH,GAAkB;AAA9F;AAAA;AAAA;AAAA;AAAA,YAnBnD;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CAlEM;;GAAMR,e;;KAAAA,e","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Select from 'react-select';\n\nimport { Category, Course, Courses } from '../../types';\n\nexport const TrainingCourses: React.FC = () => {\n  const perPage = 3;\n  const [totalPages, setTotalPages] = useState(1);\n  const [page, setPage] = useState(1);\n  const [coursesList, setcoursesList] = useState<Course[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [apiData, setApiData] = useState<Courses>();\n  const [categories, setCategories] = useState<Category[]>([]);\n  const [selectedCategories, setSelectedCategories] = useState<any[]>([])\n  console.log(coursesList)\n  let url = `http://frontend-trial-api.qa.parallax.dev/api/courses`;\n  if (page > 1) {\n    url = apiData?.next_page_url || url\n  }\n  const categoriesUrl = 'https://frontend-trial-api.qa.parallax.dev/api/categories';\nconsole.log(selectedCategories)\n  useEffect(() => {\n    const getCategories = () => {\n      setLoading(true);\n      fetch(categoriesUrl)\n        .then(res => res.json())\n        .then(res => {\n          console.log(res)\n          setCategories(res.courses.data)\n          setLoading(false);\n        });\n    }\n    getCategories();\n\n    const getcoursesList = () => {\n      setLoading(true);\n      fetch(url)\n        .then(res => res.json())\n        .then(res => {\n          setTotalPages(res.last_page);\n          setcoursesList([...coursesList, ...res.courses.data]);\n          setApiData(res.courses)\n          setLoading(false);\n        });\n    }\n    getcoursesList();\n  }, [page]);\nconsole.log(categories.map(x => x.name))\n  return (\n    <div className=\"App\">\n      <Select\n        isMulti={true}\n      onChange={(value) => setSelectedCategories([value])}\n        options={ [\n          { value: 'chocolate', label: 'Chocolate' },\n          { value: 'strawberry', label: 'Strawberry' },\n          { value: 'vanilla', label: 'Vanilla' }\n        ]}\n      \n      />\n\n      {coursesList.map((x: Course, i) => {\n        // Tidy up\n        let name = x?.name?.replace('<p>', '').replace('</p>', '');\n        return <div key={i} className=\"box\">\n          {`${name} ${x.category} ${x.location}`}\n        </div>\n      })}\n      {apiData?.current_page !== apiData?.last_page && <button className=\"btn-load-more\" onClick={() => setPage(page + 1)}>{loading ? 'Loading...' : 'Load More '}</button>}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}